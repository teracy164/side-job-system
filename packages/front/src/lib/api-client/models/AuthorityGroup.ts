/* tslint:disable */
/* eslint-disable */
/**
 * ShaFuku API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthorityGroup
 */
export interface AuthorityGroup {
    /**
     * 
     * @type {number}
     * @memberof AuthorityGroup
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AuthorityGroup
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthorityGroup
     */
    isDeleted: boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthorityGroup
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof AuthorityGroup
     */
    createUserId?: number;
    /**
     * 
     * @type {string}
     * @memberof AuthorityGroup
     */
    updatedAt?: string;
    /**
     * 
     * @type {number}
     * @memberof AuthorityGroup
     */
    updateUserId?: number;
}

export function AuthorityGroupFromJSON(json: any): AuthorityGroup {
    return AuthorityGroupFromJSONTyped(json, false);
}

export function AuthorityGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorityGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'isDeleted': json['isDeleted'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'createUserId': !exists(json, 'createUserId') ? undefined : json['createUserId'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'updateUserId': !exists(json, 'updateUserId') ? undefined : json['updateUserId'],
    };
}

export function AuthorityGroupToJSON(value?: AuthorityGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'isDeleted': value.isDeleted,
        'createdAt': value.createdAt,
        'createUserId': value.createUserId,
        'updatedAt': value.updatedAt,
        'updateUserId': value.updateUserId,
    };
}

